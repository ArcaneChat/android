/* Autogenerated file, do not edit manually */
package chat.delta.rpc.types;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonSubTypes.Type;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
import com.fasterxml.jackson.annotation.JsonTypeInfo.As;

@JsonTypeInfo(use=Id.MINIMAL_CLASS, include=As.PROPERTY, property="kind")
@JsonSubTypes({@Type(CallState.Alerting.class), @Type(CallState.Active.class), @Type(CallState.Completed.class), @Type(CallState.Missed.class), @Type(CallState.Declined.class), @Type(CallState.Cancelled.class)})
public abstract class CallState {

/**
 * Fresh incoming or outgoing call that is still ringing.
 * <p>
 * There is no separate state for outgoing call that has been dialled but not ringing on the other side yet as we don't know whether the other side received our call.
 */
  public static class Alerting extends CallState {
  }

/* Active call. */
  public static class Active extends CallState {
  }

/* Completed call that was once active and then was terminated for any reason. */
  public static class Completed extends CallState {
    /* Call duration in seconds. */
    public Integer duration;
  }

/* Incoming call that was not picked up within a timeout or was explicitly ended by the caller before we picked up. */
  public static class Missed extends CallState {
  }

/* Incoming call that was explicitly ended on our side before picking up or outgoing call that was declined before the timeout. */
  public static class Declined extends CallState {
  }

/**
 * Outgoing call that has been cancelled on our side before receiving a response.
 * <p>
 * Incoming calls cannot be cancelled, on the receiver side cancelled calls usually result in missed calls.
 */
  public static class Cancelled extends CallState {
  }

}