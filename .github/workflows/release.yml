name: Upload Release APK

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags: 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: master

jobs:
  build:
    name: Upload Release APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: textbook/git-checkout-submodule-action@master
      - run: cp jni/deltachat-core-rust/rust-toolchain .
      - uses: actions-rs/toolchain@v1
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - uses: android-actions/setup-android@v2
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21d

      - name: Compile core
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          export PATH="${PATH}:${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/:${ANDROID_NDK_ROOT}"
          ./scripts/install-toolchains.sh && ./ndk-make.sh

      - name: Build APK
        run: ./gradlew --no-daemon assembleGplay

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: build/outputs/apk/gplay/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.sign_app.outputs.signedReleaseFile}}
          asset_name: deltalab-${{ github.ref }}.apk
          asset_content_type: application/zip
